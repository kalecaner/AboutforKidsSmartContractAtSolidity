{
	"id": "f261fd1d2b444387c1fd988cfdfba8e5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CryptoKids.sol": {
				"content": "// SPDX-License-Identifier:UNLICENSED\r\npragma solidity ^0.8.7;\r\n\r\ncontract CryptoKids{\r\n    // owner DAD\r\n    // uint pozitif tam sayılar negatif değer alamaz\r\n    //bool klasik bool\r\n    //string \r\n    //address  cüzdan adress leri anlamına geliyor\r\n     address owner;\r\n     constructor()\r\n     {\r\n         owner=msg.sender;//  sender sözleşmeyi  ağa dağıtan kişi anlamına gelir  sözleşmeyi\r\n         // sözleşmeyi  yaratan  kişidir.Baba oğullarına  belli bir  periyotta para göndermek için\r\n         // bir smart contract olusturmussa bu sözleşmenin senderı babadır.\r\n\r\n\r\n     }\r\n     //msg.sender; //adress of sender\r\n    // msg.value;// amount of ether provided to this contract in wei, the function should\r\n     //  be marked \"payable\"  gönderdiğin para miktarina erişmej için kullanılır\r\n    // msg.data; // bytes, complete call data\r\n    // msg.gas; // remaining gas\r\n    /*Bir dizi oluşturmak istiyorsan\r\n    uint[5] names; şeklinde oluşturabilirsin bu 5 elemanlı bir dizi anlamına gelir\r\n    uint[] names;  eleman sayısı belli olmaan bir dizi anlamına gelir.\r\n    eleman eklemek için\r\n     names.push(\"Caner\");\r\n     names[0]=\"Phill\";  0. eleman Phill anlamına gelir\r\n     slmek için :\r\n     delete names[\"Phil\"]\r\n\r\n\r\n    \r\n     */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // define Kid\r\n\r\n    // add kid to contract\r\n\r\n    // deposit  funds to contract specifially  to kid's account\r\n\r\n    // kid checks if abble to withdraw\r\n\r\n    // withdraw money\r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CryptoKids.sol": {
				"CryptoKids": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CryptoKids.sol\":66:1490  contract CryptoKids{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CryptoKids.sol\":281:605  constructor()\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CryptoKids.sol\":319:329  msg.sender */\n  caller\n    /* \"contracts/CryptoKids.sol\":313:318  owner */\n  0x00\n  dup1\n    /* \"contracts/CryptoKids.sol\":313:329  owner=msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CryptoKids.sol\":66:1490  contract CryptoKids{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CryptoKids.sol\":66:1490  contract CryptoKids{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e33f3990a5fbeea1dda65c6d160cd21e23bf3c1ad3a6f31c2fa5c3343bbc903564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea2646970667358221220e33f3990a5fbeea1dda65c6d160cd21e23bf3c1ad3a6f31c2fa5c3343bbc903564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3F DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 EXTCODEHASH CODECOPY SWAP1 0xA5 0xFB 0xEE LOG1 0xDD 0xA6 0x5C PUSH14 0x160CD21E23BF3C1AD3A6F31C2FA5 0xC3 CALLVALUE EXTCODESIZE 0xBC SWAP1 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:1424:0:-:0;;;281:324;;;;;;;;;;319:10;313:5;;:16;;;;;;;;;;;;;;;;;;66:1424;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e33f3990a5fbeea1dda65c6d160cd21e23bf3c1ad3a6f31c2fa5c3343bbc903564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 EXTCODEHASH CODECOPY SWAP1 0xA5 0xFB 0xEE LOG1 0xDD 0xA6 0x5C PUSH14 0x160CD21E23BF3C1AD3A6F31C2FA5 0xC3 CALLVALUE EXTCODESIZE 0xBC SWAP1 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "66:1424:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "24332",
								"totalCost": "36932"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 1490,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 605,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 605,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 605,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 281,
									"end": 605,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 319,
									"end": 329,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 313,
									"end": 318,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 318,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 313,
									"end": 329,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 313,
									"end": 329,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 313,
									"end": 329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 313,
									"end": 329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 1490,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e33f3990a5fbeea1dda65c6d160cd21e23bf3c1ad3a6f31c2fa5c3343bbc903564736f6c63430008070033",
									".code": [
										{
											"begin": 66,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 1490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 1490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 1490,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CryptoKids.sol\":\"CryptoKids\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CryptoKids.sol\":{\"keccak256\":\"0xa33490bfce8269c84ad8717ed50121ea215ae2db899c2b79a4a995aff620ee8d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8437837ab39459a98be3b4f1f64eca6620ba300937bc23e97ef7f88b5985e2d4\",\"dweb:/ipfs/QmQvK94HJkS9ei7VxGsD4fVpFj9FsWZ3J181Tm94mJdtxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/CryptoKids.sol:CryptoKids",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CryptoKids.sol": {
				"ast": {
					"absolutePath": "contracts/CryptoKids.sol",
					"exportedSymbols": {
						"CryptoKids": [
							13
						]
					},
					"id": 14,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "CryptoKids",
							"nameLocation": "75:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "268:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 13,
									"src": "260:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "260:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "301:304:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "313:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "319:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "319:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "313:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "313:16:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:0:0"
									},
									"scope": 13,
									"src": "281:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 14,
							"src": "66:1424:0",
							"usedErrors": []
						}
					],
					"src": "39:1451:0"
				},
				"id": 0
			}
		}
	}
}